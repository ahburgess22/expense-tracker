name: Expense Tracker CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flake8
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        elif [ -f backend/requirements.txt ]; then
          pip install -r backend/requirements.txt
        fi
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        # Attempt to find and run tests in common locations
        if [ -d "tests" ]; then
          pytest tests/
        elif [ -d "backend/tests" ]; then
          pytest backend/tests/
        else
          pytest
        fi

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install frontend dependencies
      run: |
        # Try different potential frontend directory structures
        if [ -f "package.json" ]; then
          npm install
        elif [ -f "frontend/package.json" ]; then
          cd frontend
          npm install
        elif [ -f "client/package.json" ]; then
          cd client
          npm install
        fi
    
    - name: Run linting
      continue-on-error: true  # Don't fail the build if linting fails initially
      run: |
        # Try different potential frontend directory structures
        if [ -f "package.json" ]; then
          npm run lint || echo "Linting command not found, skipping"
        elif [ -f "frontend/package.json" ]; then
          cd frontend
          npm run lint || echo "Linting command not found, skipping"
        elif [ -f "client/package.json" ]; then
          cd client
          npm run lint || echo "Linting command not found, skipping"
        fi
    
    - name: Run tests
      run: |
        # Try different potential frontend directory structures
        if [ -f "package.json" ]; then
          npm test -- --passWithNoTests
        elif [ -f "frontend/package.json" ]; then
          cd frontend
          npm test -- --passWithNoTests
        elif [ -f "client/package.json" ]; then
          cd client
          npm test -- --passWithNoTests
        fi